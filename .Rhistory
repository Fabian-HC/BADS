# === clear the screen === #
cat("\014")
# === clear the environment === #
rm(list = ls())
# === reset graphics === #
graphics.off()
# === set working directory === #
setwd("~/MA")
# === update current packages === #
#update.packages()
# === install and load packages via pacman === #
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, broom, tidyr)
# === load data === #
df <- read.csv('MA_data.csv')
View(df)
# === clear the screen === #
cat("\014")
# === clear the environment === #
rm(list = ls())
# === reset graphics === #
graphics.off()
# === set working directory === #
setwd("~/MA")
# === update current packages === #
#update.packages()
# === install and load packages via pacman === #
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, broom, tidyr)
# === load data === #
df <- read.csv('MA_data.csv')
# === ABOUT THIS SCRIPT === #
# R syntax to display regression output leans on:
# https://stackoverflow.com/questions/22713325/fitting-several-regression-models-with-dplyr?noredirect=1&lq=1
# === FIT 1 === #
# Controls:
# NUTS dummies: country
# Basic Geographic Controls: latitude + longitude + altitude
# Regional Environment and Location: dist_border_ln + dist_coast_ln
# PANEL A: trade center dummy
A_fit1 <- df %>% group_by(Year) %>%
do(model = tidy(lm(lnGDPpc ~ trade_center +
country + latitude + longitude + altitude +
dist_border_ln + dist_coast_ln, data = .))) %>%
unnest(model)
A_fit1 %>% print(n = Inf)
dat1900 <- df[df$Year == 1900,]
A_fit1_1900 <- lm(lnGDPpc ~ trade_center +
country + latitude + longitude + altitude +
dist_border_ln + dist_coast_ln,
data = dat1900)
summary(A_fit1_1900)
#set working directory
setwd("~/MA")
#clear workspace
rm(list=ls())
#update current packages
#update.packages()
#install and load packages via pacman
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, eurostat, sf, maps, tmap, compare, ggplot2)
# === Load data === #
# Shapefile
RW_sf <- read_sf('~/MA/RosesWolf_RegionalGDP_shapefile/regions_nuts2.shp')
#alternate from GISCO [commented out]: a sf at resolution 1:60  from year  2010
#geodata <- get_eurostat_geospatial(resolution = "60", nuts_level = "2", year = 2010)
RW_sf$NUTS_CODE[RW_sf$NUTS_CODE == "AT123"] <- "AT12+AT13"
RW_sf$NUTS_CODE[RW_sf$NUTS_CODE == "DE912"] <- "DE91+DE92"
RW_sf$NUTS_CODE[RW_sf$NUTS_CODE == "DE712"] <- "DE71+DE72"
# Attribute Data
df <- read.csv('MA_data.csv')
# === Applicability === #
# Check overlap of attribute data with shapefile
intersect(df$nuts_2,RW_sf$NUTS_CODE)
setdiff(df$nuts_2,RW_sf$NUTS_CODE)
setdiff(RW_sf$NUTS_CODE,df$nuts_2)
# === Specification of attribute data for the plot === #
dat <- df %>%
select(nuts_2, GDP_11, Year) %>%
filter(Year == 2015) %>%
mutate(cat = cut_to_classes(GDP_11, style = "quantile"))
# merge attribute data with geodata
map_data <- inner_join(RW_sf, dat, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data) + geom_sf(aes(fill=cat),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Oranges") +
guides(fill = guide_legend(reverse=T, title = "International Dollars")) +
labs(title="GDP_11",
caption="Map of regions in Quantiles by GDP_11") +
theme_light() + theme(legend.position=c(.8,.8)) +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat2 <- df %>%
select(nuts_2, trade_center, Year) %>%
filter(Year == 2015) %>%
mutate(cat2=as.factor(trade_center))
# merge attribute data with geodata
map_data2 <- inner_join(RW_sf, dat2, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data2) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Oranges") +
guides(fill = guide_legend(reverse=T, title = "trade_center")) +
labs(title="Trade Center Regions",
caption="Map of regions by trade_center") +
theme_light() + theme(legend.position=c(.8,.8)) +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2=as.factor(num_trade_centers))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num_trade_centers")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8)) +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2=as.factor(num_trade_centers))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8)) +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2=as.factor(num_trade_centers))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2=cut_to_classes(num_trade_centers, style = quantile))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat = cut_to_classes(num_trade_centers, style = quantile))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
ggplot(map_data5) + geom_sf(aes(fill=cat),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = quantile))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat <- df %>%
select(nuts_2, GDP_11, Year) %>%
filter(Year == 2015) %>%
mutate(cat = cut_to_classes(GDP_11, style = "quantile"))
# merge attribute data with geodata
map_data <- inner_join(RW_sf, dat, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data) + geom_sf(aes(fill=cat),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Oranges") +
guides(fill = guide_legend(reverse=T, title = "International Dollars")) +
labs(title="GDP_11",
caption="Map of regions in Quantiles by GDP_11") +
theme_light() + theme(legend.position=c(.8,.8)) +
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = "quantile"))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
View(map_data5)
View(map_data5)
map_data5$cat2
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=9, style = "quantile"))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=9, style = "quantile"))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
View(map_data5)
View(map_data5)
map_data5$cat2
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=9, style = "equal"))
# merge attribute data with geodata
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
map_data5$cat2
View(dat5)
dat5$cat2
dat5$cat2
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=5, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=5, style = "equal"))
rm(dat5)
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=5, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=9, style = "equal"))
rlang::last_error()
rlang::last_trace()
cut_to_classes(num_trade_centers, n=9, style = "equal")
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=9, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = "quantile"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(as.factors(num_trade_centers), style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=100, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, n=20, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_to_classes(num_trade_centers, style = "equal"))
View(df)
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut(num_trade_centers, style = "equal"))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_interval(num_trade_centers, n=9)
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_interval(num_trade_centers, n=9))
dat5 <- df %>%
select(nuts_2, num_trade_centers, Year) %>%
filter(Year == 2015) %>%
mutate(cat2 = cut_interval(num_trade_centers, n=9))
map_data5 <- inner_join(RW_sf, dat5, by = c("NUTS_CODE" = "nuts_2"))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
# === Plot Map === #
ggplot(map_data5) + geom_sf(aes(fill=cat2),color="dim grey", size=.1) +
scale_fill_brewer(palette = "Blues") +
guides(fill = guide_legend(reverse=T, title = "num tc")) +
labs(title="num_trade_centers Regions",
caption="Map of regions by num_trade_centers") +
theme_light() + theme(legend.position=c(.8,.8))+
coord_sf(xlim=c(-10,30), ylim=c(35,60))
# === clear the screen === #
cat("\014")
# === clear the environment === #
rm(list = ls())
# === reset graphics === #
graphics.off()
# === set working directory === #
setwd("~/MA")
# === update current packages === #
#update.packages()
# === install and load packages via pacman === #
#if (!require("pacman")) install.packages("pacman")
#pacman::p_load()
# === load data === #
df <- read.csv('MA_data.csv')
df$time <- ifelse(df$Year == 1980, 0, if(df$Year == 2015, 1, -1))
df$time <- ifelse(df$Year == 1980, 0, ifelse(df$Year == 2015, 1, -1))
df = filter(df, Year == -1)
df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(YEAR == 1980, 0, 1))
df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
df <- read.csv('MA_data.csv')
df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
View(df)
View(df)
# === load data === #
df <- read.csv('MA_data.csv')
df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
df <- df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
df&time_dummy
df$time_dummy
df <- read.csv('MA_data.csv')
dt <- df %>% select(Year) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
dt <- df %>% select(Year, nuts_2) %>%
filter(Year == 1980 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1980, 0, 1))
df$time_dummy <- right_join(df, dt, by = nuts_2)
df$time_dummy <- right_join(df, dt, by = 'nuts_2')
ds <- right_join(df, dt, by = 'nuts_2')
View(ds)
ds <- right_join(df, dt, by = c('Year', 'nuts_2')
ds <- join(df, dt, by = c('Year', 'nuts_2')
ds <- join(df, dt, by = c('Year', 'nuts_2'))
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
View(ds)
View(ds)
didreg1 = lm(GDPpcGrowth ~ mining*trade_center + time_dummy + time_dummy*mining*trade_center, data = ds)
summary(didreg1)
didreg1 = lm(GDPpc ~ mining*trade_center + time_dummy + time_dummy*mining*trade_center, data = ds)
summary(didreg1)
didreg1 = lm(lnGDPpc ~ mining*trade_center + time_dummy + time_dummy*mining*trade_center, data = ds)
summary(didreg1)
dt <- df %>% select(Year, nuts_2) %>%
filter(Year == 1900 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1900, 0, 1))
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
didreg1 = lm(lnGDPpc ~ mining*trade_center + time_dummy + time_dummy*mining*trade_center, data = ds)
summary(didreg1)
dt <- df %>% select(Year, nuts_2) %>%
filter(Year == 1970 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1970, 0, 1))
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
didreg1 = lm(lnGDPpc ~
mining*trade_center +
time_dummy +
time_dummy*mining*trade_center, data = ds)
summary(didreg1)
didreg1 = lm(lnGDPpc ~
mining*trade_center +
time_dummy +
time_dummy*mining*trade_center +
country, data = ds)
summary(didreg1)
dt <- df %>% select(Year, nuts_2, mining, trade_center) %>%
filter(Year == 1970 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1970, 0, 1)) %>%
mutate(treatment_dummy = mining * trade_center)
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
didreg1 = lm(lnGDPpc ~
mining*trade_center +
time_dummy +
time_dummy*mining*trade_center +
country, data = ds)
summary(didreg1)
didreg2 = lm(lnGDPpc ~
treament_dummy +
time_dummy +
time_dummy*treament_dummy +
country, data = ds)
summary(didreg2)
dt <- df %>% select(Year, nuts_2, mining, trade_center) %>%
filter(Year == 1970 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1970, 0, 1)) %>%
mutate(treatment_dummy = mining * trade_center)
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
didreg1 = lm(lnGDPpc ~
mining*trade_center +
time_dummy +
time_dummy*mining*trade_center +
country, data = ds)
summary(didreg1)
didreg2 = lm(lnGDPpc ~
treament_dummy +
time_dummy +
time_dummy*treatment_dummy +
country, data = ds)
didreg2 = lm(lnGDPpc ~
treatment_dummy +
time_dummy +
time_dummy*treatment_dummy +
country, data = ds)
summary(didreg2)
dt <- df %>% select(Year, nuts_2, mining, num_trade_centers) %>%
filter(Year == 1970 | Year == 2015) %>%
mutate(time_dummy = ifelse(Year == 1970, 0, 1)) %>%
mutate(treatment_dummy = mining * num_trade_centers)
ds <- inner_join(df, dt, by = c('Year', 'nuts_2'))
didreg2 = lm(lnGDPpc ~
treatment_dummy +
time_dummy +
time_dummy*treatment_dummy +
country, data = ds)
summary(didreg2)
# === clear the screen === #
cat("\014")
# === clear the environment === #
rm(list = ls())
# === reset graphics === #
graphics.off()
# === set working directory === #
setwd("~/MA")
# === update current packages === #
#update.packages()
# === install and load packages via pacman === #
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, broom, tidyr)
# === load data === #
df <- read.csv('MA_data.csv')
View(df)
